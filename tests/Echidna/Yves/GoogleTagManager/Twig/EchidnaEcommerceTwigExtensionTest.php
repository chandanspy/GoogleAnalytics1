<?php

namespace Echidna\Yves\GoogleAnalytics\Twig;

use Codeception\Test\Unit;
use Echidna\Yves\GoogleAnalytics\Plugin\EchidnaEcommerce\EchidnaEcommercePageTypePluginInterface;
use Symfony\Component\HttpFoundation\Request;
use Twig_Environment;

class EchidnaEcommerceTwigExtensionTest extends Unit
{
    /**
     * @var \Echidna\Yves\GoogleAnalytics\Twig\EchidnaEcommerceTwigExtension
     */
    protected $twigExtension;

    /**
     * @var \Echidna\Yves\GoogleAnalytics\Plugin\EchidnaEcommerce\EchidnaEcommercePageTypePluginInterface[]|\PHPUnit\Framework\MockObject\MockObject[]
     */
    protected $EchidnaEcommercePageTypePluginInterfaceCollection;

    /**
     * @var \Twig_Environment|\PHPUnit\Framework\MockObject\MockObject
     */
    protected $twigEnvironmentMock;

    /**
     * @var \Symfony\Component\HttpFoundation\Request|\PHPUnit\Framework\MockObject\MockObject
     */
    protected $requestMock;

    /**
     * @return void
     */
    protected function _before()
    {
        parent::_before(); // TODO: Change the autogenerated stub

        $EchidnaEcommercePageTypePluginInterface = $this->getMockBuilder(EchidnaEcommercePageTypePluginInterface::class)
            ->disableOriginalConstructor()
            ->getMock();

        $EchidnaEcommercePageTypePluginInterface->method('handle')
            ->willReturn('template');

        $this->twigEnvironmentMock = $this->getMockBuilder(Twig_Environment::class)
            ->disableOriginalConstructor()
            ->getMock();

        $this->requestMock = $this->getMockBuilder(Request::class)
            ->disableOriginalConstructor()
            ->getMock();

        $this->EchidnaEcommercePageTypePluginInterfaceCollection = [
            'productDetail' => $EchidnaEcommercePageTypePluginInterface,
        ];

        $this->twigExtension = new EchidnaEcommerceTwigExtension($this->EchidnaEcommercePageTypePluginInterfaceCollection);
    }

    /**
     * @return void
     */
    public function testGetFunctionsSuccess(): void
    {
        $result = $this->twigExtension->getFunctions();

        $this->assertIsArray($result);
        $this->assertNotCount(0, $result);
    }

    /**
     * @return void
     */
    public function testRenderEchidnaEcommerceSuccess(): void
    {
        $result = $this->twigExtension->renderEchidnaEcommerce($this->twigEnvironmentMock, 'productDetail', $this->requestMock);

        $this->assertEquals('template', $result);
    }

    /**
     * @return void
     */
    public function testRenderEchidnaEcommerceFailure(): void
    {
        $result = $this->twigExtension->renderEchidnaEcommerce($this->twigEnvironmentMock, 'no_plugin', $this->requestMock);

        $this->assertEquals('', $result);
    }
}
