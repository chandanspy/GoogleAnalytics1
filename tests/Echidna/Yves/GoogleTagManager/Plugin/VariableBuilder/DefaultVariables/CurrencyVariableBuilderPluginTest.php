<?php

namespace Echidna\Yves\GoogleAnalytics\Plugin\VariableBuilder\DefaultVariables;

use Codeception\Test\Unit;
use Echidna\Yves\GoogleAnalytics\GoogleAnalyticsFactory;
use Spryker\Shared\Kernel\Store;

class CurrencyVariableBuilderPluginTest extends Unit
{
    /**
     * @var \Echidna\Yves\GoogleAnalytics\GoogleAnalyticsFactory|\PHPUnit\Framework\MockObject\MockObject
     */
    protected $factoryMock;

    /**
     * @var \Spryker\Shared\Kernel\Store|\PHPUnit\Framework\MockObject\MockObject
     */
    protected $storeMock;

    /**
     * @var \Echidna\Yves\GoogleAnalytics\Plugin\VariableBuilder\DefaultVariables\CurrencyVariableBuilderPlugin
     */
    protected $plugin;

    /**
     * @return void
     */
    protected function _before()
    {
        parent::_before(); // TODO: Change the autogenerated stub

        $this->factoryMock = $this->createMock(GoogleAnalyticsFactory::class);
        $this->storeMock = $this->createMock(Store::class);

        $this->plugin = new CurrencyVariableBuilderPlugin();
        $this->plugin->setFactory($this->factoryMock);
    }

    /**
     * @return void
     */
    public function testHandleSuccess(): void
    {
        $this->factoryMock->expects($this->atLeastOnce())
            ->method('getStore')
            ->willReturn($this->storeMock);

        $this->storeMock->expects($this->atLeastOnce())
            ->method('getCurrencyIsoCode')
            ->willReturn('EUR');

        $array = $this->plugin->handle([]);

        $this->assertArrayHasKey('currency', $array);
        $this->assertEquals('EUR', $array['currency']);
    }
}
